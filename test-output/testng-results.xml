<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="5" failed="1" total="8" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="SuiteOne" duration-ms="192" started-at="2559-07-24T14:18:32Z" finished-at="2559-07-24T14:18:32Z">
    <groups>
    </groups>
    <test name="SuiteOneCaseOne" duration-ms="102" started-at="2559-07-24T14:18:32Z" finished-at="2559-07-24T14:18:32Z">
      <class name="com.stta.SuiteOne.SuiteOneCaseOne">
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@4b9e13df]" name="checkCaseToRun" is-config="true" duration-ms="40" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="FAIL" signature="SuiteOneCaseOneTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@4b9e13df]" name="SuiteOneCaseOneTest" duration-ms="11" started-at="2559-07-24T21:18:32Z" data-provider="SuiteOneCaseOneData" finished-at="2559-07-24T21:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
	21 And 22 Not Match expected [22] but found [21]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
	21 And 22 Not Match expected [22] but found [21]
	at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
	at com.stta.SuiteOne.SuiteOneCaseOne.SuiteOneCaseOneTest(SuiteOneCaseOne.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1211)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteOneCaseOneTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@4b9e13df]" name="reporterDataResults" is-config="true" duration-ms="7" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="SKIP" signature="SuiteOneCaseOneTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@4b9e13df]" name="SuiteOneCaseOneTest" duration-ms="2" started-at="2559-07-24T21:18:32Z" data-provider="SuiteOneCaseOneData" finished-at="2559-07-24T21:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[13]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[DataToRun for row number 1 Is No Or Blank. So Skipping Its Execution.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: DataToRun for row number 1 Is No Or Blank. So Skipping Its Execution.
	at com.stta.SuiteOne.SuiteOneCaseOne.SuiteOneCaseOneTest(SuiteOneCaseOne.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1211)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteOneCaseOneTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@4b9e13df]" name="reporterDataResults" is-config="true" duration-ms="15" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseOne@4b9e13df]" name="closeBrowser" is-config="true" duration-ms="5" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.stta.SuiteOne.SuiteOneCaseOne -->
    </test> <!-- SuiteOneCaseOne -->
    <test name="SuiteOneCaseTwo" duration-ms="45" started-at="2559-07-24T14:18:32Z" finished-at="2559-07-24T14:18:32Z">
      <class name="com.stta.SuiteOne.SuiteOneCaseTwo">
        <test-method status="PASS" signature="checkSuiteToRun()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@66a3ffec]" name="checkSuiteToRun" is-config="true" duration-ms="360" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSuiteToRun -->
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@66a3ffec]" name="checkCaseToRun" is-config="true" duration-ms="22" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="SKIP" signature="SuiteOneCaseTwoTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@66a3ffec]" name="SuiteOneCaseTwoTest" duration-ms="2" started-at="2559-07-24T21:18:32Z" data-provider="SuiteOneCaseTwoData" finished-at="2559-07-24T21:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[DataToRun for row number 0 Is No Or Blank. So Skipping Its Execution.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: DataToRun for row number 0 Is No Or Blank. So Skipping Its Execution.
	at com.stta.SuiteOne.SuiteOneCaseTwo.SuiteOneCaseTwoTest(SuiteOneCaseTwo.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1211)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteOneCaseTwoTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@66a3ffec]" name="reporterDataResults" is-config="true" duration-ms="5" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="SuiteOneCaseTwoTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@66a3ffec]" name="SuiteOneCaseTwoTest" duration-ms="2" started-at="2559-07-24T21:18:32Z" data-provider="SuiteOneCaseTwoData" finished-at="2559-07-24T21:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteOneCaseTwoTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@66a3ffec]" name="reporterDataResults" is-config="true" duration-ms="5" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.stta.SuiteOne.SuiteOneCaseTwo@66a3ffec]" name="closeBrowser" is-config="true" duration-ms="5" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.stta.SuiteOne.SuiteOneCaseTwo -->
    </test> <!-- SuiteOneCaseTwo -->
  </suite> <!-- SuiteOne -->
  <suite name="Calc Suite" duration-ms="0" started-at="2559-07-24T14:18:33Z" finished-at="2559-07-24T14:18:33Z">
    <groups>
    </groups>
  </suite> <!-- Calc Suite -->
  <suite name="SuiteTwo" duration-ms="134" started-at="2559-07-24T14:18:32Z" finished-at="2559-07-24T14:18:32Z">
    <groups>
    </groups>
    <test name="SuiteTwoCaseOne" duration-ms="26" started-at="2559-07-24T14:18:32Z" finished-at="2559-07-24T14:18:32Z">
      <class name="com.stta.SuiteTwo.SuiteTwoCaseOne">
        <test-method status="SKIP" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@604ed9f0]" name="checkCaseToRun" is-config="true" duration-ms="0" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[SuiteTwoCaseOne's CaseToRun Flag Is 'N' Or Blank. So Skipping Execution Of SuiteTwoCaseOne]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: SuiteTwoCaseOne's CaseToRun Flag Is 'N' Or Blank. So Skipping Execution Of SuiteTwoCaseOne
	at com.stta.SuiteTwo.SuiteTwoCaseOne.checkCaseToRun(SuiteTwoCaseOne.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.TestRunner.beforeRun(TestRunner.java:648)
	at org.testng.TestRunner.run(TestRunner.java:616)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1211)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="SKIP" signature="SuiteTwoCaseOneTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@604ed9f0]" name="SuiteTwoCaseOneTest" duration-ms="1" started-at="2559-07-24T21:18:32Z" data-provider="SuiteTwoCaseOneData" finished-at="2559-07-24T21:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[45]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteTwoCaseOneTest -->
        <test-method status="SKIP" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@604ed9f0]" name="reporterDataResults" is-config="true" duration-ms="0" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="SKIP" signature="SuiteTwoCaseOneTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@604ed9f0]" name="SuiteTwoCaseOneTest" duration-ms="0" started-at="2559-07-24T21:18:32Z" data-provider="SuiteTwoCaseOneData" finished-at="2559-07-24T21:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[21]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteTwoCaseOneTest -->
        <test-method status="SKIP" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@604ed9f0]" name="reporterDataResults" is-config="true" duration-ms="0" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="SKIP" signature="closeBrowser()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseOne@604ed9f0]" name="closeBrowser" is-config="true" duration-ms="0" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.stta.SuiteTwo.SuiteTwoCaseOne -->
    </test> <!-- SuiteTwoCaseOne -->
    <test name="SuiteTwoCaseTwo" duration-ms="86" started-at="2559-07-24T14:18:32Z" finished-at="2559-07-24T14:18:32Z">
      <class name="com.stta.SuiteTwo.SuiteTwoCaseTwo">
        <test-method status="PASS" signature="checkSuiteToRun()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@7d9d1a19]" name="checkSuiteToRun" is-config="true" duration-ms="22" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSuiteToRun -->
        <test-method status="PASS" signature="checkCaseToRun()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@7d9d1a19]" name="checkCaseToRun" is-config="true" duration-ms="65" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkCaseToRun -->
        <test-method status="SKIP" signature="SuiteTwoCaseTwoTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@7d9d1a19]" name="SuiteTwoCaseTwoTest" duration-ms="1" started-at="2559-07-24T21:18:32Z" data-provider="SuiteTwoCaseTwoData" finished-at="2559-07-24T21:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[9]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[DataToRun for row number 0 Is No Or Blank. So Skipping Its Execution.]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: DataToRun for row number 0 Is No Or Blank. So Skipping Its Execution.
	at com.stta.SuiteTwo.SuiteTwoCaseTwo.SuiteTwoCaseTwoTest(SuiteTwoCaseTwo.java:70)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1211)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteTwoCaseTwoTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@7d9d1a19]" name="reporterDataResults" is-config="true" duration-ms="5" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="SuiteTwoCaseTwoTest(java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@7d9d1a19]" name="SuiteTwoCaseTwoTest" duration-ms="2" started-at="2559-07-24T21:18:32Z" data-provider="SuiteTwoCaseTwoData" finished-at="2559-07-24T21:18:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SuiteTwoCaseTwoTest -->
        <test-method status="PASS" signature="reporterDataResults()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@7d9d1a19]" name="reporterDataResults" is-config="true" duration-ms="4" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporterDataResults -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:com.stta.SuiteTwo.SuiteTwoCaseTwo@7d9d1a19]" name="closeBrowser" is-config="true" duration-ms="4" started-at="2559-07-24T21:18:32Z" finished-at="2559-07-24T21:18:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- com.stta.SuiteTwo.SuiteTwoCaseTwo -->
    </test> <!-- SuiteTwoCaseTwo -->
  </suite> <!-- SuiteTwo -->
</testng-results>
